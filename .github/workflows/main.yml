name: Build and Release Executables

# Trigger on version tags and allow manual triggering
on:
  push:
    tags:
      - "v*.*.*"  # Trigger on tags like v1.0.0
  workflow_dispatch:

jobs:
  build:
    name: Build Executable for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pyftpdlib

      - name: Build Executable with PyInstaller
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            pyinstaller --onefile --windowed --name server_setup_windows server_setup.py
          elif [ "${{ runner.os }}" == "macOS" ]; then
            pyinstaller --onefile --windowed --name server_setup_macos server_setup.py
          else
            pyinstaller --onefile --name server_setup_linux server_setup.py
          fi
        shell: bash

      - name: Upload Executable as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: server_setup_${{ matrix.os }}
          path: |
            dist/server_setup_windows.exe
            dist/server_setup_macos
            dist/server_setup_linux

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: List Artifacts (Debugging)
        run: ls -R ./artifacts

      - name: Create Release and Upload Files
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            ./artifacts/server_setup_windows/*
            ./artifacts/server_setup_macos/*
            ./artifacts/server_setup_linux/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
